{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","Tasks","props","tasks","map","task","done","hideDoneTasks","content","Buttons","length","disabled","every","Section","title","body","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAUeA,EARF,kBACT,uBAAMC,UAAU,OAAhB,UACI,uBAAOC,YAAY,kBACnB,wBAAQD,UAAU,eAAlB,+BCUOE,G,MAbD,SAACC,GAAD,OACV,oBAAIH,UAAU,OAAd,SACKG,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACjB,qBAAIN,UAAS,qBAAgBM,EAAKC,MAAQJ,EAAMK,cAAgB,qBAAuB,IAAvF,UACO,wBAAQR,UAAS,UAAKM,EAAKC,KAAO,sBAAwB,yBAA1D,oBAEhB,uBAAMP,UAAS,UAAKM,EAAKC,KAAO,WAAa,IAA7C,cAAqDD,EAAKG,WACzD,wBAAQT,UAAU,uBAAlB,oCCeWU,G,MAtBC,SAACP,GACb,OAA2B,IAAvBA,EAAMC,MAAMO,OAGL,KAIP,sBAAKX,UAAU,UAAf,UACI,yBAAQA,UAAU,qBAAlB,UACKG,EAAMK,cAAgB,aAAU,QADrC,qBAGA,wBACIR,UAAU,kBACVY,SAAWT,EAAMC,MAAMS,OAAM,qBAAGN,QAFpC,wCCHGO,G,MATC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OACZ,0BAAShB,UAAU,UAAnB,UAEQ,oBAAIA,UAAU,kBAAd,SAAiCe,IAChCC,OCDPZ,EAAQ,CACZ,CAAEa,GAAI,EAAGR,QAAS,wBAAeF,MAAM,GACvC,CAAEU,GAAI,EAAGR,QAAS,6BAAoBF,MAAM,IAoB/BW,MAff,WACE,OACE,uBAAMlB,UAAU,YAAhB,UACE,kDACA,cAAC,EAAD,CAASe,MAAM,qBAAqBC,KAAM,cAAC,EAAD,MAC1C,cAAC,EAAD,CAASD,MAAM,mBAAcC,KAAM,cAAC,EAAD,CAASZ,MAAOA,EAAOI,cAP1C,UAShB,cAAC,EAAD,CAAOJ,MAAOA,EAAOI,cATL,YCEPW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.907bc854.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n    <form className=\"form\">\r\n        <input placeholder=\"Wpisz zadanie\" />\r\n        <button className=\"form__button\">Dodaj zadanie</button>\r\n    </form>\r\n\r\n);\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = (props) => (\r\n    <ul className=\"list\">\r\n        {props.tasks.map(task => (\r\n            <li className={`list__item ${task.done && props.hideDoneTasks ? \"list__item--hidden\" : \"\"}`}>\r\n                   <button className={`${task.done ? \" list__button--done\" : \" list__button--undone\"}`}>âœ”\r\n    </button>\r\n   <span className={`${task.done ? \"doneTask\" : \"\"}`}> {task.content}</span>\r\n    <button className=\"list__button--remove\">ðŸ—‘</button>\r\n            </li >\r\n        ))}\r\n    </ul >\r\n\r\n);\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = (props) => {\r\n    if (props.tasks.length === 0) {\r\n\r\n\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button className=\" buttons__button  \">\r\n                {props.hideDoneTasks ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n            </button>\r\n            <button\r\n                className=\"buttons__button\"\r\n                disabled ={props.tasks.every(({ done }) => done)}\r\n            >\r\n                UkoÅ„cz wszystkie\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({title, body}) => (\r\n    <section className=\"section\">\r\n        \r\n            <h2 className=\"section__header\">{title}</h2>\r\n            {body}\r\n        \r\n    </section>\r\n)\r\n\r\nexport default Section;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\n\nconst tasks = [\n  { id: 1, content: \"zjeÅ›Ä‡ obiad\", done: true },\n  { id: 2, content: \"przejÅ›Ä‡ na React\", done: true },\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <h1>Lista zadaÅ„</h1>\n      <Section title=\"Dodaj nowe zadanie\" body={<Form />} />\n      <Section title=\"Lista zadaÅ„\" body={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />} />\n\n      <Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />\n\n\n    </main>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}